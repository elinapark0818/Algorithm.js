// * 순열 템플릿

function getPermutation(arr, num) {
  if (num === 1) {
    return arr.map((value) => [value]);
  }

  let result = [];

  arr.forEach((value, index) => {
    const rest = arr.slice(0, index).concat(arr.slice(index + 1));
    const permutation = getPermutation(rest, num - 1);
    const attached = permutation.map((p) => [value, ...p]);
    result.push(...attached);
  });
  return result;
}

const arr = [1, 2, 3, 4, 5];

const p = getPermutation(arr, 3);

console.log(p);

// * 1
// [ [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5 ] ]

// * 2
// [
//   [ 1, 2 ], [ 1, 3 ], [ 1, 4 ],
//   [ 1, 5 ], [ 2, 1 ], [ 2, 3 ],
//   [ 2, 4 ], [ 2, 5 ], [ 3, 1 ],
//   [ 3, 2 ], [ 3, 4 ], [ 3, 5 ],
//   [ 4, 1 ], [ 4, 2 ], [ 4, 3 ],
//   [ 4, 5 ], [ 5, 1 ], [ 5, 2 ],
//   [ 5, 3 ], [ 5, 4 ]
// ]

// * 3
// [
//   [ 1, 2, 3 ], [ 1, 2, 4 ], [ 1, 2, 5 ], [ 1, 3, 2 ],
//   [ 1, 3, 4 ], [ 1, 3, 5 ], [ 1, 4, 2 ], [ 1, 4, 3 ],
//   [ 1, 4, 5 ], [ 1, 5, 2 ], [ 1, 5, 3 ], [ 1, 5, 4 ],
//   [ 2, 1, 3 ], [ 2, 1, 4 ], [ 2, 1, 5 ], [ 2, 3, 1 ],
//   [ 2, 3, 4 ], [ 2, 3, 5 ], [ 2, 4, 1 ], [ 2, 4, 3 ],
//   [ 2, 4, 5 ], [ 2, 5, 1 ], [ 2, 5, 3 ], [ 2, 5, 4 ],
//   [ 3, 1, 2 ], [ 3, 1, 4 ], [ 3, 1, 5 ], [ 3, 2, 1 ],
//   [ 3, 2, 4 ], [ 3, 2, 5 ], [ 3, 4, 1 ], [ 3, 4, 2 ],
//   [ 3, 4, 5 ], [ 3, 5, 1 ], [ 3, 5, 2 ], [ 3, 5, 4 ],
//   [ 4, 1, 2 ], [ 4, 1, 3 ], [ 4, 1, 5 ], [ 4, 2, 1 ],
//   [ 4, 2, 3 ], [ 4, 2, 5 ], [ 4, 3, 1 ], [ 4, 3, 2 ],
//   [ 4, 3, 5 ], [ 4, 5, 1 ], [ 4, 5, 2 ], [ 4, 5, 3 ],
//   [ 5, 1, 2 ], [ 5, 1, 3 ], [ 5, 1, 4 ], [ 5, 2, 1 ],
//   [ 5, 2, 3 ], [ 5, 2, 4 ], [ 5, 3, 1 ], [ 5, 3, 2 ],
//   [ 5, 3, 4 ], [ 5, 4, 1 ], [ 5, 4, 2 ], [ 5, 4, 3 ]
// ]
