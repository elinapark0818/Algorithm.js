const bubbleSort = function (arr) {
  // TODO: 여기에 코드를 작성합니다.

  // [5,1,7,4,6,3,2,8] 처음 두 수를 비교해서 순서대로 숫자를 서로 바꿔줍니다.
  // [1,5,7,4,6,3,2,8] 5와 7은 이미 정렬되어 있으니까 그대로 놔둡니다.
  // [1,5,7,4,6,3,2,8] 7과 4는 서로 바꿔줍니다.
  // [1,5,4,7,6,3,2,8]
  // [1,5,4,6,7,3,2,8]
  // [1,5,4,6,3,7,2,8]
  // [1,5,4,6,3,2,7,8] 끝까지 정렬을 했으면 다시 처음부터 비교합니다.
  // [1,5,4,6,3,2,7,8]
  // [1,4,5,6,3,2,7,8] 5,6은 넘어가고 6,3 순서를 바꿔줍니다.
  // [1,4,5,3,6,2,7,8]
  // [1,4,5,3,2,6,7,8] 다시 처음부터 비교합니다.
  // [1,4,3,5,2,6,7,8]
  // [1,4,3,2,5,6,7,8] 다시 처음부터
  // [1,3,4,2,5,6,7,8]
  // [1,3,2,4,5,6,7,8] 다시 처음부터
  // [1,2,3,4,5,6,7,8] 정렬 끝
  for (let i = 0; i < arr.length; i++) {
    let result = 0;
    for (let j = 0; j < arr.length - 1 - i; j++) {
      if (arr[j] > arr[j + 1]) {
        result = arr[j];
        arr[j] = arr[j + 1];
        arr[j + 1] = result;
      }
    }
    // 정렬하지 않아도 되는 경우 반복문을 돌리지 않기 위한 방법
    if (!result) {
      break;
    }
  }
  return arr;
};

const bubbleSort = function (arr) {
  for (let i = 0; i < arr.length - 1; i++) {
    // 순차적으로 비교하기 위한 반복문
    let result = 0;
    for (let j = 0; j < arr.length - 1 - i; j++) {
      // 끝까지 돌았을 때 다시 처음부터 비교하기 위한 반복문
      if (arr[j] > arr[j + 1]) {
        // 두 수를 비교하여 앞 수가 뒷 수보다 크면
        result = arr[j]; // 두 수를 서로 바꿔준다
        arr[j] = arr[j + 1];
        arr[j + 1] = result;
      }
    }
    // 정렬하지 않아도 되는 경우 반복문을 돌리지 않기 위한 방법
    if (!result) {
      break;
    }
  }
  return arr;
};
